<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>block_msk</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// turn on ai mode if not on multiplayer arena
if room!=arena
{
th=instance_create(0,0,ai_control);
th.obj=bomberman2;
th.player=1;
th=instance_create(0,0,ai_control);
th.obj=bomberman3;
th.player=2;
th=instance_create(0,0,ai_control);
th.obj=bomberman4;
th.player=3;
th=instance_create(0,0,ai_control);
th.obj=bomberman5;
th.player=4;
th=instance_create(0,0,ai_control);
th.obj=bomberman6;
th.player=5;
th=instance_create(0,0,ai_control);
th.obj=bomberman7;
th.player=6;
th=instance_create(0,0,ai_control);
th.obj=bomberman8;
th.player=7;
th=instance_create(0,0,ai_control);
th.obj=bomberman9;
th.player=8;
th=instance_create(0,0,ai_control);
th.obj=bomberman10;
th.player=9;
th=instance_create(0,0,ai_control);
th.obj=bomberman11;
th.player=10;
th=instance_create(0,0,ai_control);
th.obj=bomberman12;
th.player=11;
th=instance_create(0,0,ai_control);
th.obj=bomberman13;
th.player=12;
th=instance_create(0,0,ai_control);
th.obj=bomberman14;
th.player=13;
th=instance_create(0,0,ai_control);
th.obj=bomberman15;
th.player=14;
th=instance_create(0,0,ai_control);
th.obj=bomberman16;
th.player=15;
}
// play music
sound_loop(choose(superbomberman3_battle,
                  superbomberman2_battle,
                  superbomberman5_battle2));
// create grid for bots
global.mpgrid=mp_grid_create(0,0,room_width/16,room_height/16,16,16)
mp_grid_add_instances(global.mpgrid,wall,false);
// create precise grid for bots - this one also includes soft blocks
// it's used for escape purposes
// it's actualised every half of second
global.mpprecisegrid=mp_grid_create(0,0,room_width/16,room_height/16,16,16)
mp_grid_add_instances(global.mpprecisegrid,wall,false);
// destroy some blocks so map will be more random
if room=wide_1p or room=widearena
  number_to_destroy=80;
  else
  number_to_destroy=20;
repeat(number_to_destroy) {
if instance_number(softblock)&gt;0
{
do
  {
  x=random(room_width);
  y=random(room_height);
  }
until(place_meeting(x,y,softblock));
th=instance_place(x,y,softblock);
with(th) instance_destroy();
}
}
alarm[0]=2;
alarm[1]=5;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mp_grid_clear_all(global.mpprecisegrid);
mp_grid_add_instances(global.mpprecisegrid,wall,false);
mp_grid_add_instances(global.mpprecisegrid,softblock,false);
alarm[1]=30;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// change the amount of items on in the blocks here
items[0]=10; // additional bomb to set
items[1]=10; // additional firepower
items[2]=10; // additional speed
items[3]=0;  // skull (none because they are not completed and won't be in example)
items[4]=3;  // bomb kick
items[5]=3;  // bomb toss
items[6]=3;  // bomb punch
items[7]=2;  // bouncy bomb
items[8]=1;  // walking thru the bombs
items[9]=1;  // walking thru the soft blocks
items[10]=2; // red bomb
items[11]=2; // max firepower
items[12]=3; // ruis

for(i=0; i&lt;=12; i+=1)
  {
  repeat(items[i])
    {
    if instance_number(softblock)&gt;0 and instance_number(item_obj)&lt;instance_number(softblock) {
    do
      {
      x=round(random(room_width)/16)*16;
      y=round(random(room_height)/16)*16;
      }
    until(place_meeting(x,y,softblock) and !place_meeting(x,y,item_obj));
    th=instance_create(x,y,item_obj);
    th.item=i;
    }
    }
  }</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_number(bomberman_parent)=1 and !instance_exists(bomberman_dead)
{/*
if bomberman_parent.pid=0
show_message("for God's sake, white won.");
if bomberman_parent.pid=1
show_message("for God's sake, black won.");
if bomberman_parent.pid=2
show_message("for God's sake, red won.");
if bomberman_parent.pid=3
show_message("for God's sake, blue won.");
if bomberman_parent.pid=4
show_message("for God's sake, green won.");
if bomberman_parent.pid=5
show_message("for God's sake, yellow won.");
if bomberman_parent.pid=6
show_message("for God's sake, pink won.");
if bomberman_parent.pid=7
show_message("for God's sake, cyan won.");
if bomberman_parent.pid=8
show_message("for God's sake, orange won.");
if bomberman_parent.pid=9
show_message("for God's sake, grey won.");
if bomberman_parent.pid=10
show_message("for God's sake, super white won.");
if bomberman_parent.pid=11
show_message("for God's sake, navy won.");
if bomberman_parent.pid=12
show_message("for God's sake, brown won.");
if bomberman_parent.pid=13
show_message("for God's sake, acid won.");
if bomberman_parent.pid=14
show_message("for God's sake, glass won.");
if bomberman_parent.pid=15
show_message("for God's sake, twisted won.");*/
game_restart();
}
if instance_number(bomberman_parent)=0 and !instance_exists(bomberman_dead)
{
//show_message("draw");
game_restart();
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// stop sounds
sound_stop_all();</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//mp_grid_draw(global.mpgrid);</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
