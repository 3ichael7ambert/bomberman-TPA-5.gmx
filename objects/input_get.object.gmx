<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar FONT;
FONT = font_add_sprite(spr_font, ord(" "), 0, -1);
draw_set_color(c_white); //We use white as it is the default blending color.
draw_set_font(FONT);

ai[0]=0;
ai[1]=0;
ai[2]=0;
ai[3]=0;
ai[4]=0;
ai[5]=0;
ai[6]=0;
ai[7]=0;
global.bmb_input[0]=input_keyboard;
global.bmb_input[1]=input_keyboard;
global.bmb_input[2]=input_pad1;
global.bmb_input[3]=input_pad2;
global.bmb_input[4]=input_none;
global.bmb_input[5]=input_none;
global.bmb_input[6]=input_none;
global.bmb_input[7]=input_none;
for(i=0; i&lt;8; i+=1) {
control_reset(i);
}
global.bmb_key[0,0]=vk_down;
global.bmb_key[0,1]=vk_right;
global.bmb_key[0,2]=vk_up;
global.bmb_key[0,3]=vk_left;
global.bmb_key[0,4]=vk_delete;
global.bmb_key[0,5]=vk_pagedown;
global.bmb_key[0,6]=vk_end;
global.bmb_key[1,0]=ord("S");
global.bmb_key[1,1]=ord("D");
global.bmb_key[1,2]=ord("W");
global.bmb_key[1,3]=ord("A");
global.bmb_key[1,4]=ord("G");
global.bmb_key[1,5]=ord("J");
global.bmb_key[1,6]=ord("H");
// to connect the action to the d-pad, enter these numbers:
// -1 - down
// -2 - right
// -3 - up
// -4 - left
global.bmb_key[2,0]=-1;
global.bmb_key[2,1]=-2;
global.bmb_key[2,2]=-3;
global.bmb_key[2,3]=-4;
global.bmb_key[2,4]=1;
global.bmb_key[2,5]=3;
global.bmb_key[2,6]=2;
global.bmb_key[3,0]=-1;
global.bmb_key[3,1]=-2;
global.bmb_key[3,2]=-3;
global.bmb_key[3,3]=-4;
global.bmb_key[3,4]=1;
global.bmb_key[3,5]=3;
global.bmb_key[3,6]=2;
//if !joystick_exists(1) show_message("No joypad! Only 2 players will be playable"); else
//if !joystick_exists(2) show_message("No second joypad! 3 players will be playable");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(p=0; p&lt;=3; p+=1)
{
if ai[p]=0
  {
  if global.bmb_input[p]=input_keyboard
    {
    for(i=0; i&lt;=6; i+=1)
      {
      if keyboard_check(global.bmb_key[p,i])
        {
        if global.bmb_hold[p,i]&lt;2 global.bmb_hold[p,i]+=1;
        }
        else
        {
        if global.bmb_hold[p,i]=4 global.bmb_hold[p,i]=0;
        if global.bmb_hold[p,i]&gt;0 global.bmb_hold[p,i]+=1;
        }
      }
    }
  if global.bmb_input[p]=input_pad1
    {
    for(i=0; i&lt;=4; i+=1)
      {
      if gamepad_check(1,global.bmb_key[p,i])
        {
        if global.bmb_hold[p,i]&lt;2 global.bmb_hold[p,i]+=1;
        }
        else
        {
        if global.bmb_hold[p,i]=4 global.bmb_hold[p,i]=0;
        if global.bmb_hold[p,i]&gt;0 global.bmb_hold[p,i]+=1;
        }
      }
    }
  if global.bmb_input[p]=input_pad2
    {
    for(i=0; i&lt;=4; i+=1)
      {
      if gamepad_check(2,global.bmb_key[p,i])
        {
        if global.bmb_hold[p,i]&lt;2 global.bmb_hold[p,i]+=1;
        }
        else
        {
        if global.bmb_hold[p,i]=4 global.bmb_hold[p,i]=0;
        if global.bmb_hold[p,i]&gt;0 global.bmb_hold[p,i]+=1;
        }
      }
    }
  }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
